<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABUIQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAIRtJ
        REFUeNrtnXd8VGXWx7/3zmQmk94TUkgCJBI6hh4CUgRRQbHgq4Agi4gNedkV0Y9tXd/Xsu4Kr+4uVqyo
        KAiWpZeFRHoPBGkhpJGElEmbZGYyz/tHAIkQSCDJvTO5v/MhkOHOvc895zznOc95nnMeCZeBDT0HOcEB
        9pNOOkJ/zPN7U4ppq6lzSFykziR5C48aX6t3jUe1d7XJHGg1lvna9aC3+ZYaa3yKjdUeZkOVodxQLlWI
        Cmvl0ZzMswOrki2TqwKrpNrudKM73eiITILrMA3J+V+hBD+OsoZV/IzQW30W+/7Hd7tvVWB0pGdsZXRh
        ++yYCh+ki95Vuuybi4t+ggDJ4VMakRmU6ZFRlpmZE1A00HyT+b/KMIc6BjGOoXSgAm9NAZREOV5sYTXf
        cEy/vOOncZvbe0cEhhFRGVEUXhJQ24xP0ouAosBsj1xH7tk8S87IzEeO3nSqt+MubmYA1Zg0BWhtCPJJ
        ZStvcSTsq14/9ziR4NehulNRuLUVnu0uArMMx80nu6TfduCB/dGF8xhMX0KclJVO1Op0OrOJr3iPFHmh
        fIMptFtq//8klnQytrOEVLR6J5TwrjTm1+SFHB22q/+Og+kVNbMd3R2zuI9BZBOlKUDzopAgPuD/OCjP
        NDkivJP2DdqdaA2Vva1eNoXfwM1hqHCUmfL67eyWYt4WkP+6ZbCYySSn8Q9UrwAWTBzgB56n1HNyO0PP
        wjv3Da8KQF+rF6pio84ubL75N643Lvc+9NUZyfI3xvEpL+GmKcD1YCvlfMxX0kfR73cxJJ8Zk9HFoRcq
        brMkZFv83oBV9tRn0+/MfoQH8aWbU1gC1SEDwQckYQ+YMbLj891W+pcgnIeCCrovj5s7Z4jwGcUXCPI0
        gTYFBxFsReg/6Tn4T5HLwo+7OZHofyNjbUR65Nejn1jSWch7EWRogr06NnKQhxHSAvc3+vd71++Qd4Xk
        lMI/T5LwMfvvT37z7e4LDYJZFLJXE3LDwq/lVeBlr9kDBn9gyjZYnVn09WxBteepm+fP6rXAE+YjNCW4
        HA6zEPjCf8KIoR9458u1riL886Sz+2UPX3BfUoo3LKZQE/hvsAHL6crW4OSxfT8IKHA10V9MIdl9548e
        le+XxBp+0kQPsA4rozgZPOq+Ll8GnHVl4Z+n0NwuH957R7nfswh2tu2efxxYh8Vjwj2xywMKnNvdawrJ
        Iji709dTxwjjLtqR3jbFv4U0/Dmkf6l7//e9zshtRvjnSS98Tg+Z/2Knat1QituaEhQieBshTQ194Mmg
        dDeX8fabSoaasH0PTZ0aAIuA8rYi/oUcIJRtnpNu6bzKWNVWhX8+TuBe0ePbicnV7sMo5bu2IP4SvgLm
        9LrxzcDcti38i+YGGQNefLEz/IiaFrhaAOUIHmBPSPLj0dt1muAvHgzsMZtumXbG90nqpsUuafh3sQSh
        e3RM7Pc+Zk3kl5Lf2Y6L5w0RUlfOsNzVej78E29SA5KfCcpoex5/Y0knwo6MeDTNC75kuCtZgjMsAOYl
        9F1kaONO39WdQpN5wPy3YmGR6/gDC3kXYRw95oZUyeUi/C2iBPYeq8YOEbpvXWEgKAfmsj4keU5gtiba
        xtuBdseSZxT6vUkn5x4I9iKA2d0TP3av1MTaNPIs7bvg9U7DcNqNJDbe52uEYcLYqFQ3zfRfy9TQ1mnN
        xGFCt5gvnNH0O4jjb/7j/+SdpXn91z4r8Ds+4eFl3vchnGsoyEMA06KSPjJWaGK8Pm/AaB791n+H9EA4
        z1pBBgKY0bn7UtfZ1KUkGS0DPn48GoRz7CNKRwDTE+NXGuya8JpJBaw9vnk8AZxge/kWChA8mBSRotcE
        15wqYO+4ckovEOreObCQfyD000cH7NMcv+YmvQj75Q+DhPypesNDr/IGe4wz7/U73nY2d7UmySJk/6xR
        Qv8Vn6hP+DZ68wrrTZMf9tEifi04Jwg4Nv1eYfiEt5pNcrrmuc0KejDA+6NHVr1Y1s4ZXFVnhSXgRP99
        pTOPZNuHskY9CvAyN9DLZ/FTKXPLgjQhtSxqfLP7/Vr+ZFq+/c5m8QaaQQHexUYfjy9mpswtC9AE1Aoq
        4JV748nCVw8dqZ3M18o3ZwvvsN046REfl87oURv5Zk6/V+g/UX5SeJAchP6RCZrr19oUcOzJUUIWZCkp
        /mMIhDT9Fu+TmkBaf0YQePAPgxQNENct+UwdErhfm/crExcI+2XajaDQMlE5ApjRJzJVi/opRXrRcWXd
        GkGrLxbbEMBDCZ1WazF/Jclo7/HN49E9uPYNpNc4DQzlAW6P2vXWyVvssmtMrpwTtXJpvAgYsnVR5bMs
        az0F2ImV2ICtbxy826bXhKCwCugKEzwNU7bWWt9iQes8sgSBMI57zqht9FTLQGCe8LDQtZonIIB77/TU
        UjtVNCX0Oz5x2DA6XYM0m1x1cz4ZWHv9+F5uP4dmf1UDHbFrpz8mH4/nziZ+s0kuXAlZ2Bketm1Ofh9N
        /GpCLaeHLX3yIT9bS08J/4pwT5prtGhmV33kWZo8Q+gWMbylhD+fd4DRY/210V+l1O7Y2CHwZUttGkvB
        jzld47ZrjFavM9hj1VuxcKYlxF/CGjYGJn6hZfiqWgXsA+aneXVtCT9AINySntNro7/KyWQe8Wizn6hg
        I4c7mHJH4GmNweofBsKOzBvyJI1dHWhUKPgUNYwL//uf8/toEy71wxKU6/7Juk01d7OkeW6YxXaE1O+P
        nlro10nI7+wt06C0ufYJCODJfu33aIx1HorZ9GLnYY2S7lUjgat4neU+KROze2vG1XmQO3jNhJXui65/
        06iFrQhp4jjXruLvihSSMTEZiq9XAU4A08PjNmgMdT7q8e3UgKFXtQFXGQI6ss3NPDFzkGZUnQ9Hx0jj
        VuuutjJwxZDBciRSb1z4XVmsxk7ng0To/hn3jDsu6HttN7CQxymvXp+7aZU+nJQMNUPmC+M1bxgVeDB+
        kpfm/jkx+ZyeOubZKx5P1aAPYGMRP0bumVgVrBlT50VVVMqU5/wMV7hC35D4c5lG8kjzAG3njzPDjnnw
        tKG5KwoJbpoFeInFfB9xdmypn8ZE50ZRxKGxy/zWNvW00nxg0L2+Zdoo6vwUmjt6VF1Av9EWYDl/482g
        mjvN3loPcn7ktyu+NcV7QVNswBaEdNetPiVa73ENCsm+L4kG0sgvux+gnHW+x184maj1HtdApU9oxewt
        y23bGzcEbOFbyTMxbaTGONfBnrtPxC247MkDl1GAwbzpnvKwxU9jm+ugPCx96nuGmMYowF7WUjPw8E0O
        Le3bhVCr++VOyw37LlNs+hIxx3Kzcekkm1bvz8VgD1s2uZccdsnnv4sE2ngHKTEzWcv7dzXUGNNGf/ux
        9chVFEAwh+6jrO01hrkeamM+GimOpNGt3qf1hoBClpMWXtK/yqCxy/VQ7nNo8Gof8++yhupZgCD+Skwf
        e3eNWa4Igej5x16Vm1c2bAG2ssNt38CCCI1Zromz8T8OeI8pDSnAMZbycge3JG0B2FVRI7sPWh75Q0MJ
        IwVAv3u8tPwfF6aggv43118ZvGABtvApW3yNN1V4aD3FhQeBYH2SMH1xUYnpC7uCC0kgPiHzp5wOGptc
        GQnbe96flZFyQfAXLMBmCvVRA/OiNRa5No72Lu+aIv1y4fcL08D5/Oh5Yrxw8RUAHQZ0GNFhQI8bevRY
        ARDUUIsNK1ZqsLssBxxuNXfO22CpukQBNjM79tCAZq8toTB8CSGEYEyYMOCJCS8M+GHACxOeuON+zieu
        pQwbFVRQQSlnqaCMEkop4SyWy9zZjXhCqMXR5FKLOio4QoVCHBHSnhGxoR9kXKIAi3SWYTYX2QIWRhTR
        RBBJOGG0IwwT7k28Ry2lFFPMWQrJJ4ssMsmgDAAZgcCDoYwkrEnWQqacVFYAICEU4Y451HfAwczujnoK
        YGOMXDhYuDmryCVkQulGR+KIJhh/AvDHdB131BFI4IXfKiihiLMc5l8cIYRHyWYZH7CX8YylsWdlVfEf
        vmIbuYwklu/IVoZXbmmD538rHPUs1zEWhZqOOOPMVi+8RKx4UHwq0kSOKBE20ZIoEGMEIkZsFWUiVTws
        wkWwSBbviDxhveL37KJYfCfGiXYiQIwTP4hCsUHEK8QxSQTseMozv/4QsI6yRMnfuXq9O76Ek8RI+uGD
        e3OdgXlVIw4g8GYQvZnJp6zmJT5gCuOIwniZb9jJZyMfsw8fhjCDPngjISs0AIDA0q57ws5dFylABn/n
        aH/hNB6AO+2JoS9DSMQPGaU8VxO96clhlrCKV3ifqYyiSz1vw8ExNvEZB2jPBCbSDwPK+9myz/Z+gbss
        vw2RxQh98ArnOPvHQwwX/yu2iEqhBArEbQIRI3753edHxJtimPAQcWKe2CiqhBBCOMRu8VfRVxhFopgn
        fhH2et/YJOIU46FbbaePzweE9QCb8e5gb6/+RSBvbmYMw+ioupbdwNPczQaWs4BvGck4PFjFGg7Th1e5
        mR4q6Pe/wSYXxGcGbys8pwDp/A2592W2i6kIEkGMZgKJhKu2jR3owGh28wVfsxoDOfTlnyTTEfVF14zt
        Fve0rSvHGz1E8iExPSpD1MpYN0K4nYl0Q/1eahRRJLOPj6jiLyTRToXCB6gJ/blHxboX6izAQYRveFy1
        KlsqEcPdTCL+uub0rYtAhjMQgUmlwgco9zycUCSfdIAe1rC7g0mVVYA8GcEcBuFs8SkJta+pC3w7bIrJ
        OAn6LO7BHl/aSX2NjGMaU2jnZMJ3Flg7vRdffRL0MtsJjVFbIQgD43iMwU7X950HRVHromXSkdMRXiFR
        apoCysTwBm8zTBN/C6JaMkXkyw706Ui+RhXZWQOjeYa+aKkJLY2gdvieKNGnketbo5rJtRePMgdVhyRc
        BnL41z4ZJfo03HxKVKIAgfw3s3CGJQmpGe6gdGywKnyTbxn6VIL9y1ShAOHMY7rK5/syBqCY0uu+UyVm
        hd+lKHKrr0AvpN7tClWQCxzMS0xV/cjvRjugjHcowOc6en8F31Kg8LsUBxoCs9FjClNBLrA3TzPZCRw/
        r3OFl1ex87paa6VYsf0A52GXoiOydPolHvYY5fvVI6o3/nWQSWYs66lpoOZWU+4kKa4CPtFFHvrVHsWK
        h4HvYrYTLPTUoSP/4Cf2kE0Z4pocOYGEB+EcZpfC71IV+7mHPtVkVjgZpCtP4kwJyVE82iz3WctjHFf0
        Tc5GbzHJbv5nQ5VshBfTSHIi8TcfRjBV4UWjnOitHnLP6FoF5wAyI3mwTYofZKYxQNFoQJlfdJDsEaFk
        G7yZSdstSNaOmYqGvYQcHyE7PJVrgMQwBrRZ8QOMZJCiNsDgKSuZDubJg04R+G05+DBRyeiHJHnJVi/l
        np9IPxVvm2oN6BhEnILPF16yxVs5GzTYaWb/LYdglKzKbfWWq32UeriBPqrfO9fy8Gaggl6A1VuuViwC
        G0dMmxc/QBSRSj1asnrIFb5KKWA0fpr0gQAFO0KVr1ztrtTD/bUBAABvlAvF1rjLpQFKPVxTgDqY8FXq
        0VJZgFxjVGpR0vuy2fRtD3oUM8LUGOVSP6V8ACu1mvQBK5WKPdvsJ9sV23xvvmz1rbaH6nOlp5SA3aBg
        IK6Mak36QLWC20Mdsl5XW6tT5uFnKG/BzD9BDifwpvMVXE0LJ7DT4QrbO/NIo5KuLRquLeeMYgrgZpV9
        S5V6+K8t+uLrmc1dTGRJg1dk83emMpF3GxyDf+V57mU8z5Hbgi3Nuex5fq0D31LZvUZSaBqQzxFaKiex
        jA9YSjFH+Oyiytj1sZxX2c1h3mdrA1es4zPMwAZWtxgXqtlHlWIKYKiR/YoUezrbmiHBoiHUnPs7r8H+
        VXTumkLSGmLPuaXaygaV6PpR2qD6tQKEb5HsrqArvrnFBgEfhuIPuNGVGxq45vxCbFSDI/wg+qLDQBdG
        tBgPTrFDOQHgbtF1+q/TMUpFAsppx4AWKvDYCTeMTOUpGsp7icCImb48zegG2hBCPAHcwgv0aKF9Cxb+
        zmbF8gMk0W2XNOqHtbcpVyS+Kz/TUrvSHVwtBVNgRX/FQpMC0aJpnGnc2oLDy1UVoHbCh7J7uYIWiON8
        02L6L1+1hqiEEd0Vr5FatA6pnUUKTgEBDOWyh1nJDKUaPmMnbRUbWPa7YxxbG0az7KZwPPYw8ylpk+LP
        YQGnFG6DVCEbFE5TF/ybz9ug+O18yAalGyFEhSwrHpA38x5r2pj4Bd+zSAVrIbXVck224lnKHOYVdrcp
        BdjEq2SqQA+PZcv7T0kqWJZP5WVOthnx7+clDqigHV5lRwrk8uKgQhW0hZ95TuFk6dYT/7NsUUVLIk8N
        tMhJlnAV2CIQfMfsBqPyroNtPMUqlbQl+PRgizysKkAVCgC1/MwsdijvkrQYHKxjFv9RzRt6Zo63yA9V
        GVU0+G7kCX48d5anq6GUT5mlqrBXZUZcpYyl8LSa2LSTJ3ibfJcT/16eZTbpKmqRjsxsya6XHKG5hlqr
        Tj0Ny+JlDjGLRFWds3M9KGcZC9mmslb5F3sUJaDvi65El5+rqqN4qvkSPxJdRPxpvMMyzqquXYG5/c1l
        6LsRYC7PUZcCQDDDXaL/l/Mjb7NXlRkQnjlDzaeRezDCbMpRV9NMPMZopxd+JQeZy2PsUmsCTM4D5h7o
        uzCq7NkzamqXxHgeu6huaD5pRNIRFRQ0bjRKOcQPfEO2irOfis4Yyjqi74hU1i5b+bKlvyGJ5y+qHHaA
        BSyhC/cxim5OIfxCtvJvfkJlZvV3MFCeI9kFekFvrKcsFaVe6mhYV14k4QIrf+JjUoAd7OVbhnEzAxVM
        pbw6clnDv9nsBNPYwNz+p23Y0ccxF99jH54o7al8o2QG8QrJgINyVrGYFIrP/Z+NbWznW27kdkYTDKpy
        EgVwmqX8m30UqahdDcP9+JRj2XWnMm1EBEQsU/pQaDcRKKaIPaJCmMUO8aIYKIIbuDJQ9BPPis2iRNQI
        5WEXlSJPrBBPiN7CyymO364j/0VC/yugh85Ixe2OGRQOwCYwjSBW8gZp5FF5IbHjUhRRxD4WEs+tjKQD
        PgoVmrBhpoA9rCWVQiwK7+5rGrwsHdPj7MfqFOAMk5EO/lxQpOjpwQd5GnAgGpUuZsXKDnYyn94MpA/t
        aUdoq9UctJJDFvvYwlbONLLF6oKp4LYDdkrrFKA33+C596czKKoAosk9SCAoYQMb0NGJnvQgjnZEE95i
        E8YCCiggl1/ZwW4nGesvj5q8+/cV4F+nADCIyGNkyz2cT5PrUMuv/MoSfIigPZFE04kYwglrhiI0NvI4
        xWlOk00uBRSQp2AyZ/PATfgf73ymbuKvB6jgcWv3AztGWJy8aE8ZZaQDegLxxwcfQokkikiC8SEI/wtp
        HtLvbAnn4iC1lGPBTA0lmDnFUU5TQgmllDrVGH9lGCqG7g6h4jcFSGA+4dt2lRHsGi9oJ//CTNyIO0bc
        0OOGOz6EYMKAPxLgiRc1mKmkjHIqKacSO45zf+xYqHLC8f3qcJQnbQ86V6b73HB5M3t2O0pdRQEuRs3v
        5hN1NkA+Zwck6hxPgcOFdyLVh4QhPz/tjgv8ACCc9wtiftW1AR44qKUWGzZsWKmhBht2atuM+EFnT9z9
        qyW0vgL4c0/twF8k19yLpaE+7L1+memQ6isAzHJ4rZe1um1tAB7F5amDL7g2FxQgQZQcTXDlLbkaAJBE
        rw1yziNcogAv8llFl+WyKzq9Gi6CbA9evtBy/6UKMALJnpUSlNsmudKGEHvYur+746ZLFSCEPzMnJ76t
        pem2OYSt/DxvFkcu/H4hbC5xjLji/hs8JlVpRbxdFv6l1i1+lRefeXzRukkFj+K2v3T/r/00RrkqIrbN
        ODyu3hb1ixSgNxu56cQNKVI/bSrgmnDDkvqHzIP1Ar71ltBvIqY6bmuQ6+VlaQAg+MSIbfeLHvU+q6cA
        2fyZp3caXT9Hu01CQj7wzz3TfndKQz0FiGICN2V67HS3a+xyPXhVxvwytNgbU8MKABL/w4NrTdkau1wP
        uszpa6cy8GqXnaTCI2GxvtZ59rdq1BgyWPu9K/SXuveX7KPMYU3VHYsNzrzhTcPl+n/B3Z9vs5+6ugIk
        MxDjxphtsjYXdCHIjsSV7vsHEHt1BYDdvFw14j1jWRvgS5uB59k+H82qudz07jIKcDu3ifzUzuqoZKah
        WXDjD35pM0T3xl7+E0Ief7dnueY6uQYFFEwYAQcvK+vL1gYys1bElZztcqaz1ndcAd2+mvLZjdVBfNrY
        L9g4AvSb5GnReo8L9P+zyWNpsFDFZdPp3OjMXKanRClez1zD9UIibPWb2xayuYH/byCNzsIZYk/1/dF7
        SLlKCkdouDb4F0b+ML3wW7o09YsW/sX3sVEbNBPqzCSL2OUng5dfQc4NJtKaEEgZY5YU96r01/qRs8Ij
        v+8XMwuvcZ9fCXvZ5Nd5qbYu4KzkZu3/vsXDesW01ivUVPBnN8dLb59v0nYKOyl8T9zyTmrV5rpKQNeK
        H4xjX9Fbtd7kfGSseuDJQ1etlXGVqipHGFcTuShir9abnA+xmw1LBtuv8xSWElYgdBPu9y3RepRzUWDu
        pFuElHbVshZXsQD+lDOvNmlV1DKtRzkTdER/8cSW+aLk+sb/OgjgD0Mi07Ve5TwUvX1Or1CaaUtHOqsR
        up7Pm6o1xjoH+ZiTH4cDNONxcK+xtEP7DZLGXCcgWcR+vyfkKxY2crBoBCx480pJR3vu4BpPbXxVOwJP
        3fHKxv1Pkdy8txVUmfq/rtMiAionQ1XyM6Ilij1lsYOl4T1WSFpgWMUk1fZdlBqwhPJGy7XR5XWjyOK/
        cvu9GqWmk880/A7x20a8eUtxh3M1ABuDJhwXV8UE/n5mZXHhMKtJY7UaEZjT5elPt84nj59a4vY2BM9T
        4ZX0F4PmCaiQ3CuT5wjjgpbUsCx28gwLYrot02sMVxm51SZ+vD7kXc40YfwHmlZZPQqAgad6vVXQqbC7
        ljqkHsiEbUt+e3VBB8Ja+lE2BIK7JpsKtV6nHvLOmjC21bQtizLyPEa9YdA2jauEjBXj/yQMoonGvw7X
        cGj02wxlt809rTihOM4ho0FhGGx9F49+43SlnejWe+hrwKT42PV6h9b/lCWDvfvSaVFxvN+6WldOMTAt
        MSpV1oSgIOlF/MoZncHR+ueZ5CEQTLspZJ+2RqgUySIiZXoiXNvof91IRyCkKbf6HtVEoQRJImDfg0kg
        yFPK/dhJEUL30ASfLE0crU8Bv04fLRBkKOmBbmQ7GYYpj3hpUYFWJp+sx+4V+gKud21Od31f/5Rb2FCb
        cLjWkdPHquZjvV0MPgV3vjB7yfc2mURlFQCW0J9Me5f91cazva0GTTStAd/iYa89smhzjSfjr/teuutv
        Tgo78bTedKDCo7i7pgKt0PtLBr096Z/7Kh3MVkuTbIDE60HD/8e7RBudW3jsLxj7p498JtO7mWTXLKFc
        N8oR/HL25tdHvOGllZhsyd6fM+6Fmf/MLNvPjma6YzMdtO2NDTciy29d4FOy7MWKcE1UzQ8Jr4z7501b
        sa5G5kBzZPw0P+bxCicND03wPapFB5s/6hd4YPotQv8O76pZS79jO0I35daQfdoaQXOSXkSmTBsqpFOo
        vn7nRooQ0rSbolK1lcLmIjd7p9Uz+oDAKfL0dyIQTEuMXa+3a8JrBvFbu37/UAIIjjmLu5KOACbFd1+u
        7Rq6XjJWDvxkcpSiSz7XgjyKgWfDRr1hKtQcwmt3/Dxzxz33WkBHFFrwvR6U8xofkudx1+SQA9om8msy
        /bWR2++9Uxi/4d3W3+7RPFhFGYJJg7ot01JJmmz6Lb0/e7QXCHY6p/DrkIVgIAtikv7iXaQJtfHkn5s0
        d0XYUwhKnFn8ULdO8AwVXjff3z5NyyxuDEm1cdtHjxXubzHf2YV/Hjt5HiFP79tjhVZf4GqktyR+Macr
        /JUsVxF/3UDwIm4sDe//um++NitosO+LwNNJz20M9OMdcH7jX38guJ2l7KDKNH5i+w1auanLkWdl+5+n
        3CHc1pDiOsb/UkswhKUdej6vFZ2rT7Jov6ffHzeH3+EKbt+VsYvXELo/DOn2kVZ99DwFFPRe8GQ/Ib1P
        jmsLH8ACrAYW+E+4P3q7VobaUB23YeK45T6wncnOGvBpKtIRPIPQPRo79hXvrLZ7HoGb3efkvU9PDxfS
        awhX8vobgy9YAfxg/FNy56WexW1x1Pcq6PX53Bu3ucFWVrUt4dehhCPAh2zyGzMzaoN3mzqm0q8keuX4
        Sae8VgAnsLRF8Z/Hh+wFvo/tO7Pzz23jnELfsoSlyVPXR3qQx/K2LPrfLIHgX8D7Mf0m9fretQ+s9SlJ
        /HLQvd9HwMeItt3z68NCBnOBF8LG3937R1Op7HLbyeRaz6L+39x165tB8BqZbcXfb4oKwBGmIuQJfk/e
        1uUHjwLXmR242Tzy+nw1e/jDvkKaSz7PaeK/PGzcxk/cipBe8px3e8Ji/wx3m7ML36PG71jPj18Z/oZJ
        SPewRRv1G4OfyGMZFR6vDo9/LXJd8BnnXD6SRVh25MruL789SBjXIFS6oVuvxkbdDmyhoEracHTDpui/
        9j02UBqc1bPK6Dwq7FXVfrcttdfWl3Z1yxWYCUbS+nXTYaGKT4hGuM/q2v+BwR+GnJbtqNo9lByyPeJE
        8rv97nnpBuHWlyVYtfH++pCFYCOPAssCBne//9Geqw0l+mqd6tRAV6uvNhX2+fG+aYMStvjCH/kF0Zyn
        9rQQnMQy7cWLxbyE0D/o5R9fMWLroFM3yH4OnxqjQ+GWyRgtUrkoiT/UP8W00ZyxqDLY/gxTMBPnFJx1
        oqFJUMB6XiFd+j/5O92MkMzEtQMO9iBSCisPsSrQHneHZ4HjjP70jfuGbw/Z/WXxA46HaocwmyEcae7z
        ejQF+D1KyGUtR/mH4ee4Jb3XdpfjDB1KOpq9WqOCuYxfqd9xS4bx2KgD9+0dfnKWvQsjiVFnwvZVocpZ
        wNXhD0A62dbKQ+JQHiLgfzstjjPFhES6hVkiSiLOhlp1zftEoz041z/XmFuTV5AVeWrq0SdOSmYH5ZQw
        h1jnZKIzW4CLsZcwjrCStexF+Kz0We+b6pvhHxUe3L6mQ3F0bvTZYKG78J7Sbz/Fb+9+/p/iop8gdPag
        /PDMgAz9qTOnc/K6lgwsG2kebpYq+jOGUXQnmwSn554LTU+PIXGCwxwgjZ0IGdMij40eqSbvgJ4xxkiH
        u9XXZqryrfa2eFR6V5tKA6uNZr9aHehtfqXGGr9i92ovs7vFvcxUbqhwK5crq3L2Z9pKkiyjqyZUYZFE
        Et3oRgIJOM4dneEK+H9xbtvsA3e+9QAAAABJRU5ErkJggg==
</value>
  </data>
</root>